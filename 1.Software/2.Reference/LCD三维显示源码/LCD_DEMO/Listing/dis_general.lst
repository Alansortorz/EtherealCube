C51 COMPILER V9.60.0.0   DIS_GENERAL                                                       02/03/2020 19:17:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DIS_GENERAL
OBJECT MODULE PLACED IN ..\Output\dis_general.obj
COMPILER INVOKED BY: D:\Keil_MDK\Keil_v5\C51\BIN\C51.EXE ..\User\dis_general.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\User) 
                    -DEBUG OBJECTEXTEND PRINT(..\Listing\dis_general.lst) OBJECT(..\Output\dis_general.obj)

line level    source

   1          /*******************************************************************************
   2          * 文档: dis_general.c
   3          * 作者: Wu LianWei
   4          * 描述: 1.一般的字符与图形显示操作
   5          *       2.所有操作都基于显示缓存DisBuf
   6          *       3.配合font.c使用
   7          *******************************************************************************/
   8          #include"public.h"
   9          //#include"font.h"
  10          extern uchar xdata DisBuf[8][128];  //1024字节的显示缓存
  11          
  12          
  13          
  14          
  15          
  16          
  17          
  18          /***************************************
  19          函数: ClearDis
  20          功能: 清显示缓存
  21          说明: 把DisBuf全部清零
  22          ***************************************/
  23          void ClearDis(void)
  24          {
  25   1          uchar i,j;
  26   1          for(i=0;i<8;i++)
  27   1          {
  28   2              for(j=0;j<128;j++)DisBuf[i][j]=0;
  29   2          }
  30   1      }
  31          
  32          
  33          
  34          
  35          
  36          
  37          
  38          /***************************************
  39          函数: DisChar6x8
  40          功能: 在屏幕上显示一个6x8的ASCII码字符
  41          说明: 1.屏幕根据6x8字符,划分为X轴上21个单位,Y轴上8个单位
  42                2.全屏能显示168个6x8字符
  43                3.Y取值范围:0~7,X取值范围:0~20
  44                4.输入显示坐标超出范围，则退出
  45          ***************************************//*
  46          void DisChar6x8(uchar Y,uchar X,uchar Character)
  47          {
  48              uchar i,j;
  49              //------------------
  50              if(Y>7||X>20)return;
  51              //------------------
  52              if( (Character>=0x20)&&(Character<0x7f) )
  53              {
  54                  i=Character-0x20;
C51 COMPILER V9.60.0.0   DIS_GENERAL                                                       02/03/2020 19:17:35 PAGE 2   

  55                  for(j=0;j<5;j++) DisBuf[Y][(6*X)+j] = ASCII_Table_6X8[i][j];//把显示数据写入缓存
  56              }
  57          }
  58          
  59          /***************************************
  60          函数: DisString6x8
  61          功能: 在屏幕上显示6x8的ASCII码字符串
  62          说明: 1.屏幕容量同DisChar6x8
  63                2.Y取值范围:0~7,X取值范围:0~20
  64                3.输入显示坐标超出范围，则退出
  65                4.能够自动换行，超出最后一行则退出
  66          ***************************************//*
  67          void DisString6x8(uchar Y,uchar X,uchar *str)
  68          {
  69              uchar i,j;
  70              //------------------
  71              if(Y>7||X>20)return;
  72              //------------------
  73              while(*str>0x00)
  74              {
  75                  if( (*str>=0x20)&&(*str<0x7f) )
  76                  {
  77                      i=*str-0x20;
  78                      for(j=0;j<5;j++) DisBuf[Y][(6*X)+j] = ASCII_Table_6X8[i][j];//把显示数据写入缓存
  79                      str++;
  80                      X++;
  81                      if(X>20)
  82                      {
  83                          Y++;
  84                          X=0;
  85                          //------------ 超出最后一行则退出
  86                          if(Y>7)return;
  87                      }
  88                  }
  89                  else str++;
  90              }
  91          }
  92          
  93          
  94          
  95          
  96          
  97          
  98          
  99          /***************************************
 100          函数: DisChar8x16
 101          功能: 在屏幕上显示一个8x16的ASCII码字符
 102          说明: 1.屏幕根据8x16字符,划分为X轴上16个单位,Y轴上4个单位
 103                2.全屏能显示64个8x16字符
 104                3.Y取值范围:0~6,X取值范围:0~15
 105                4.输入显示坐标超出范围，则退出
 106          ***************************************//*
 107          void DisChar8x16(uchar Y,uchar X,uchar Character)
 108          {
 109              uchar i,j,k;
 110              //------------------
 111              if(Y>6||X>15)return;
 112              //------------------
 113              if( (Character>=0x20)&&(Character<0x7f) )
 114              {
 115                  k=Character-0x20;
 116                  for(i=0;i<2;i++) 
C51 COMPILER V9.60.0.0   DIS_GENERAL                                                       02/03/2020 19:17:35 PAGE 3   

 117                  {
 118                      for(j=0;j<8;j++)
 119                      DisBuf[Y+i][(8*X)+j] = ASCII_Table_8X16[(2*k)+i][j];//把显示数据写入缓存
 120                  }
 121              }
 122          }
 123          
 124          /***************************************
 125          函数: DisString8x16
 126          功能: 在屏幕上显示8x16的ASCII码字符串
 127          说明: 1.屏幕容量同DisChar8x16
 128                2.Y取值范围:0~6,X取值范围:0~15
 129                3.输入显示坐标超出范围，则退出
 130                4.能够自动换行，超出最后一行则退出
 131          ***************************************//*
 132          void DisString8x16(uchar Y,uchar X,uchar *str)
 133          {
 134              uchar i,j,k;
 135              //------------------
 136              if(Y>6||X>15)return;
 137              //------------------
 138              while(*str>0x00)
 139              {
 140                  if( (*str>=0x20)&&(*str<0x7f) )
 141                  {
 142                      k=*str-0x20;
 143                      for(i=0;i<2;i++) 
 144                      {
 145                          for(j=0;j<8;j++)
 146                          DisBuf[Y+i][(8*X)+j] = ASCII_Table_8X16[(2*k)+i][j];//把显示数据写入缓存
 147                      }
 148                      //-----------------
 149                      str++;
 150                      X++;
 151                      if(X>15)
 152                      {
 153                          Y=Y+2;
 154                          X=0;
 155                          //------------ 超出最后一行承载能力则退出
 156                          if(Y>6)return;
 157                      }
 158                  }
 159                  else str++;
 160              }
 161          }
 162          
 163          
 164          
 165          
 166          
 167          
 168          
 169          /***************************************
 170          函数: DisDraw6x8
 171          功能: 在屏幕上显示一个6x8的图形
 172          说明: 1.屏幕根据6x8图形,划分为X轴上21个单位,Y轴上8个单位
 173                2.全屏能显示168个6x8图形
 174                3.Y取值范围:0~7,X取值范围:0~20
 175                4.输入显示坐标超出范围，则退出
 176          ***************************************//*
 177          void DisDraw6x8(uchar Y,uchar X,uchar *dp)
 178          {
C51 COMPILER V9.60.0.0   DIS_GENERAL                                                       02/03/2020 19:17:35 PAGE 4   

 179              uchar j;
 180              //------------------
 181              if(Y>7||X>20)return;
 182              //------------------
 183              for(j=0;j<6;j++)
 184              {
 185                  DisBuf[Y][(6*X)+j] = *dp;//把显示数据写入缓存
 186                  dp++;
 187              }
 188          }
 189          
 190          /***************************************
 191          函数: DisDraw8x16
 192          功能: 在屏幕上显示一个8x16的图形
 193          说明: 1.屏幕根据8x16图形,划分为X轴上16个单位,Y轴上4个单位
 194                2.全屏能显示64个8x16图形
 195                3.Y取值范围:0~6,X取值范围:0~15
 196                4.输入显示坐标超出范围，则退出
 197          ***************************************//*
 198          void DisDraw8x16(uchar Y,uchar X,uchar *dp)
 199          {
 200              uchar i,j;
 201              //------------------
 202              if(Y>6||X>15)return;
 203              //------------------
 204              for(i=0;i<2;i++) 
 205              {
 206                  for(j=0;j<8;j++)
 207                  {
 208                      DisBuf[Y+i][(8*X)+j] = *dp;//把显示数据写入缓存
 209                      dp++;
 210                  }
 211              }
 212          }
 213          
 214          
 215          
 216          
 217          
 218          
 219          
 220          
 221          
 222          /***************************************
 223          函数: DisDraw32x32
 224          功能: 在屏幕上显示一个32x32的字符或图形(ICO)
 225          说明: 1.显示位置没有单位坐标的限制
 226                2.输入参数超出屏幕范围,则退出
 227                3.图形大小超出屏幕的部分,会消失
 228          ***************************************//*
 229          void DisDraw32x32(uchar page,uchar column,uchar *dp)
 230          {
 231              uchar i,j;
 232              //------------------
 233              if(page>7||column>127)return;
 234              //------------------
 235              for(i=0;i<4;i++) 
 236              {
 237                  if( (page+i)>7 )break;
 238                  //--------------------
 239                  for(j=0;j<32;j++)
 240                  {
C51 COMPILER V9.60.0.0   DIS_GENERAL                                                       02/03/2020 19:17:35 PAGE 5   

 241                      //if( (column+j)>127 )break;
 242                      if( (column+j)>127 )
 243                      {
 244                          dp+=(32-j);
 245                          break;
 246                      }
 247                      //------------------------
 248                      DisBuf[page+i][column+j] = *dp;//把显示数据写入缓存
 249                      dp++;
 250                  }
 251              }
 252          }
 253          
 254          /***************************************
 255          函数: DisDraw64x32
 256          功能: 在屏幕上显示一个64x32的图形(LOGO)
 257          说明: 1.显示位置没有单位坐标的限制
 258                2.输入参数超出屏幕范围,则退出
 259                3.图形大小超出屏幕的部分,会消失
 260          ***************************************//*
 261          void DisDraw64x32(uchar page,uchar column,uchar *dp)
 262          {
 263              uchar i,j;
 264              //------------------
 265              if(page>7||column>127)return;
 266              //------------------
 267              for(i=0;i<4;i++) 
 268              {
 269                  if( (page+i)>7 )break;
 270                  //--------------------
 271                  for(j=0;j<64;j++)
 272                  {
 273                      //if( (column+j)>127 )break;
 274                      if( (column+j)>127 )
 275                      {
 276                          dp+=(64-j);
 277                          break;
 278                      }
 279                      //------------------------
 280                      DisBuf[page+i][column+j] = *dp;//把显示数据写入缓存
 281                      dp++;
 282                  }
 283              }
 284          }
 285          
 286          
 287          
 288          
 289          
 290          
 291          
 292          
 293          /***************************************
 294          函数: Reverse6x8
 295          功能: 取反显示n个6x8的字符或图形
 296          说明: 1.输入同6x8型字符,n代表个数
 297                2.与6x8型字符或图形配套使用
 298          ***************************************//*
 299          void Reverse6x8(uchar Y,uchar X,uchar n)
 300          {
 301              uchar j,k,dat;
 302              //------------------
C51 COMPILER V9.60.0.0   DIS_GENERAL                                                       02/03/2020 19:17:35 PAGE 6   

 303              if(Y>7||X>20)return;
 304              //------------------
 305              for(k=0;k<n;k++)
 306              {
 307                  if( X>20 )break;
 308                  //--------------
 309                  for(j=0;j<6;j++)
 310                  {
 311                      dat = DisBuf[Y][(6*X)+j];
 312                      DisBuf[Y][(6*X)+j] = ~dat; //把显示数据取反
 313                  }
 314                  X++;
 315              }
 316          }
 317          
 318          /***************************************
 319          函数: Reverse8x16
 320          功能: 取反显示n个8x16的字符或图形
 321          说明: 1.输入同8x16型字符,n代表个数
 322                2.与8x16型字符或图形配套使用
 323          ***************************************//*
 324          void Reverse8x16(uchar Y,uchar X,uchar n)
 325          {
 326              uchar i,j,k,dat;
 327              //------------------
 328              if(Y>6||X>15)return;
 329              //------------------
 330              for(k=0;k<n;k++)
 331              {
 332                  if( X>15 )break;
 333                  //--------------
 334                  for(i=0;i<2;i++) 
 335                  {
 336                      for(j=0;j<8;j++)
 337                      {
 338                          dat = DisBuf[Y+i][(8*X)+j];
 339                          DisBuf[Y+i][(8*X)+j] =~dat; //把显示数据取反
 340                      }
 341                  }
 342                  X++;
 343              }
 344          }
 345          
 346          
 347          
 348          
 349          
 350          
 351          
 352          /***************************************
 353          函数: BoxOut32x32
 354          功能: 框显,选中一个32x32图标的效果
 355          ***************************************//*
 356          void BoxOut32x32(uchar page,uchar column)
 357          {
 358              if(page>7||column>127)return;
 359              //---------------------------
 360              
 361              DisBuf[page][column]   |= 0x0f;
 362              DisBuf[page][column+1] |= 0x0f;
 363              DisBuf[page][column+2] |= 0x03;
 364              DisBuf[page][column+3] |= 0x03;
C51 COMPILER V9.60.0.0   DIS_GENERAL                                                       02/03/2020 19:17:35 PAGE 7   

 365              
 366              DisBuf[page][column+31] |= 0x0f;
 367              DisBuf[page][column+30] |= 0x0f;
 368              DisBuf[page][column+29] |= 0x03;
 369              DisBuf[page][column+28] |= 0x03;
 370              
 371              DisBuf[page+3][column]   |= 0xf0;
 372              DisBuf[page+3][column+1] |= 0xf0;
 373              DisBuf[page+3][column+2] |= 0xc0;
 374              DisBuf[page+3][column+3] |= 0xc0;
 375              
 376              DisBuf[page+3][column+31] |= 0xf0;
 377              DisBuf[page+3][column+30] |= 0xf0;
 378              DisBuf[page+3][column+29] |= 0xc0;
 379              DisBuf[page+3][column+28] |= 0xc0;
 380          }
 381          
 382          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     58    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
